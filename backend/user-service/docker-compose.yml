version: '3.8'

services:
  user-service-db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: user-service-db
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong@Passw0rd
      - MSSQL_PID=Developer
    ports:
      - "1433:1433"
    volumes:
      - user_service_db_data:/var/opt/mssql
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P YourStrong@Passw0rd -Q 'SELECT 1'"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  user-service-redis:
    image: redis:7-alpine
    container_name: user-service-redis
    ports:
      - "6379:6379"
    volumes:
      - user_service_redis_data:/data
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  user-service-api:
    build:
      context: .
      dockerfile: UserService.API/Dockerfile
    container_name: user-service-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=user-service-db,1433;Database=ECommerceUserService;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true;MultipleActiveResultSets=true
      - Jwt__Key=YourSuperSecretKeyThatIsAtLeast32CharactersLong!
      - Jwt__Issuer=ECommerceUserService
      - Jwt__Audience=ECommerceClients
    ports:
      - "3002:3002"
    depends_on:
      user-service-db:
        condition: service_healthy
      user-service-redis:
        condition: service_healthy
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

volumes:
  user_service_db_data:
    driver: local
  user_service_redis_data:
    driver: local

networks:
  ecommerce-network:
    driver: bridge
    external: true
