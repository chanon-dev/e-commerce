extensions:
  health_check:
    endpoint: 0.0.0.0:13133
  pprof:
    endpoint: 0.0.0.0:1777
  zpages:
    endpoint: 0.0.0.0:55679

receivers:
  # Jaeger receiver for traces
  jaeger:
    protocols:
      grpc:
        endpoint: 0.0.0.0:14250
      thrift_http:
        endpoint: 0.0.0.0:14268
      thrift_compact:
        endpoint: 0.0.0.0:6831
      thrift_binary:
        endpoint: 0.0.0.0:6832

  # OTLP receiver for modern tracing
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

  # Zipkin receiver for compatibility
  zipkin:
    endpoint: 0.0.0.0:9411

processors:
  # Batch processor for performance
  batch:
    timeout: 1s
    send_batch_size: 1024
    send_batch_max_size: 2048

  # Memory limiter to prevent OOM
  memory_limiter:
    limit_mib: 512
    spike_limit_mib: 128
    check_interval: 5s

  # Resource processor to add metadata
  resource:
    attributes:
      - key: service.namespace
        value: ecommerce
        action: upsert
      - key: deployment.environment
        from_attribute: environment
        action: insert

  # Attributes processor for span enrichment
  attributes:
    actions:
      # Add business context
      - key: business.transaction_type
        from_attribute: http.route
        action: insert
      - key: business.user_id
        from_attribute: user.id
        action: insert
      - key: business.order_id
        from_attribute: order.id
        action: insert
      
      # Security context
      - key: security.client_ip
        from_attribute: http.client_ip
        action: insert
      - key: security.user_agent
        from_attribute: http.user_agent
        action: insert

  # Probabilistic sampler
  probabilistic_sampler:
    hash_seed: 22
    sampling_percentage: 10

  # Tail sampling for intelligent sampling
  tail_sampling:
    decision_wait: 10s
    num_traces: 100
    expected_new_traces_per_sec: 10
    policies:
      # Always sample errors
      - name: error-policy
        type: status_code
        status_code:
          status_codes: [ERROR]
      
      # Always sample slow requests
      - name: latency-policy
        type: latency
        latency:
          threshold_ms: 2000
      
      # Sample business-critical operations
      - name: business-critical
        type: string_attribute
        string_attribute:
          key: business.transaction_type
          values: [order, payment, checkout]
      
      # Sample security events
      - name: security-events
        type: string_attribute
        string_attribute:
          key: security.event_type
          values: [login, fraud_detection, unauthorized_access]
      
      # Probabilistic sampling for normal operations
      - name: probabilistic-policy
        type: probabilistic
        probabilistic:
          sampling_percentage: 5

exporters:
  # Jaeger exporter
  jaeger:
    endpoint: jaeger-collector:14250
    tls:
      insecure: true

  # Elasticsearch exporter for long-term storage
  elasticsearch:
    endpoints: 
      - http://elasticsearch-1:9200
      - http://elasticsearch-2:9200
      - http://elasticsearch-3:9200
    index: jaeger-traces-%{+yyyy.MM.dd}
    pipeline: jaeger-traces-pipeline
    
  # Kafka exporter for real-time processing
  kafka:
    brokers:
      - kafka-1:9092
      - kafka-2:9093
      - kafka-3:9094
    topic: distributed-traces
    encoding: otlp_proto
    
  # Prometheus exporter for metrics
  prometheus:
    endpoint: "0.0.0.0:8889"
    namespace: jaeger
    const_labels:
      environment: production
      service: jaeger-collector

  # Logging exporter for debugging
  logging:
    loglevel: info

service:
  extensions: [health_check, pprof, zpages]
  
  pipelines:
    # Main traces pipeline
    traces:
      receivers: [jaeger, otlp, zipkin]
      processors: [memory_limiter, resource, attributes, tail_sampling, batch]
      exporters: [jaeger, elasticsearch, kafka]
    
    # Metrics pipeline for trace metrics
    metrics:
      receivers: [otlp]
      processors: [memory_limiter, resource, batch]
      exporters: [prometheus]

  telemetry:
    logs:
      level: "info"
    metrics:
      address: 0.0.0.0:8888
