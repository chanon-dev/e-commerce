apiVersion: apps/v1
kind: Deployment
metadata:
  name: customer-platform
  namespace: ecommerce
  labels:
    app: customer-platform
    tier: frontend
    version: v1.0.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: customer-platform
  template:
    metadata:
      labels:
        app: customer-platform
        tier: frontend
        version: v1.0.0
    spec:
      containers:
      - name: customer-platform
        image: ecommerce/customer-platform:latest
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: NODE_ENV
          value: "production"
        - name: NEXT_PUBLIC_API_URL
          value: "http://api-gateway:8080"
        - name: NEXT_PUBLIC_AUTH_URL
          value: "http://auth-service:3001"
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: redis-url
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/ready
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: config-volume
          mountPath: /app/.env.local
          subPath: .env.local
      volumes:
      - name: config-volume
        configMap:
          name: frontend-config
      imagePullSecrets:
      - name: docker-registry-secret

---
apiVersion: v1
kind: Service
metadata:
  name: customer-platform
  namespace: ecommerce
  labels:
    app: customer-platform
    tier: frontend
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: customer-platform

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: customer-platform-ingress
  namespace: ecommerce
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - shop.ecommerce.local
    secretName: customer-platform-tls
  rules:
  - host: shop.ecommerce.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: customer-platform
            port:
              number: 3000
